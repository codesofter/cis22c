{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fnil\fcharset0 Verdana;\f1\ftech\fcharset77 Symbol;\f2\fmodern\fcharset0 CourierNewPSMT;
\f3\fnil\fcharset129 AppleSDGothicNeo-Regular;\f4\ftech\fcharset0 Wingdings-Regular;\f5\fnil\fcharset0 LucidaGrande;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c100000;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid102\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid103\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid202\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid203\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
{\info
{\author Faculty}}\margl1080\margr1080\margb1008\margt1008\vieww16020\viewh18760\viewkind1
\deftab720
\pard\pardeftab720\ri0\qc\partightenfactor0

\f0\fs28 \cf0 CIS 22C Team Project\
Graph, Project Requirements and Problems\
\pard\pardeftab720\ri0\partightenfactor0

\fs22 \cf0 \
\pard\pardeftab720\ri0\partightenfactor0

\fs24 \cf0 \
Graph Problem Requirements: (UPDATED)\
\
\pard\pardeftab720\li720\fi-360\ri0\sa120\partightenfactor0
\ls1\ilvl0
\f1 \cf0 \'a5	
\f0 you MUST use the Graph classes that will be given in the Team Project Code file in Catalyst (not some other graph implementation)\
\ls1\ilvl0
\f1 \'a5	
\f0 your problem MUST be a subclass of the Graph class (to be given in the Team Project Code file in Catalyst), and must also be a generic class, BUT YOUR PROJECT WILL USE ONLY ONE TYPE for the generic class (still need to make the problem work for any type)\
\ls1\ilvl0
\f1 \'a5	
\f0 your subclass MUST store the graph in the Graph class, and MUST access the graph as stored in the Graph for solving the graph problem (not just store it and not use it all)\
\ls1\ilvl0
\f1 \'a5	
\f0 your DRIVER code (which MUST be in a separate class from the Graph class or its subclasses), MUST NOT DIRECTLY ACCESS ANY OF THE PRIVATE/PROTECTED INSTANCE VARIABLES IN THE Graph class NOR its subclasses!!!!\
\ls1\ilvl0
\f1 \'a5	
\f0 YOU MUST IDENTIFY WHO WROTE WHAT PARTS OF THE CODE in your .JAVA FILES (put in comments, could be at the top of each file, OR at the top of each method)\
\ls1\ilvl0
\f1 \'a5	
\f0 you may NOT change the existing classes and methods in the Graph classes, but you may add to them 
\b with permission
\b0 \
\ls1\ilvl0
\f1 \'a5	
\f0\b SUGGESTION: 
\b0 use github {\field{\*\fldinst{HYPERLINK "https://help.github.com/articles/set-up-git/"}}{\fldrslt \cf2 \ul \ulc2 https://help.github.com/articles/set-up-git/}}   (or other code sharing application)\
\pard\pardeftab720\ri0\sa120\partightenfactor0
\cf0 \
Team Project Requirements:\
\pard\pardeftab720\li720\fi-360\ri0\sa120\partightenfactor0
\ls2\ilvl0
\f1 \cf0 \'a5	
\f0 include 
\b more than one graph
\b0  (storing each graph in a separate file), with 7 to 25 vertices in one graph\
\ls2\ilvl0
\f1 \'a5	
\f0 your team project MUST: \
\pard\pardeftab720\li1440\fi-360\ri0\sa120\partightenfactor0
\ls2\ilvl1
\f2 \cf0 o	
\f0 include a loop to allow solving the problem more than once in one run\
\ls2\ilvl1
\f2 o	
\f0 display a menu to the user for the following options:\
\pard\pardeftab720\li2160\fi-360\ri0\sa120\partightenfactor0
\ls2\ilvl2
\f3 \cf0 \'a2\'c0
\f4 	
\f0 read the graph from a text file where the file name is input from the user (use the openInputFile function)\
\ls2\ilvl2
\f3 \'a2\'c0
\f4 	
\f0 add an edge to the graph\
\ls2\ilvl2
\f3 \'a2\'c0
\f4 	
\f0 remove an edge from the graph\
\ls2\ilvl2
\f3 \'a2\'c0
\f4 	
\f0 undo the previous removal(s) (you MUST use an ArrayStack or LinkedStack from HW#1, and you're allowed to add this as part of the Graph)\
\ls2\ilvl2
\f3 \'a2\'c0
\f4 	
\f0 display the graph on the screen (give the choices of Depth-First traversal or Breadth-First traversal OR adjacency list of each vertex)\
\ls2\ilvl2
\f3 \'a2\'c0
\f4 	
\f0 solve the problem for the graph, which would automatically display the results on the screen (NOTE: THERE MAY NOT BE A SOLUTION FOR A GIVEN GRAPH), and ask the user if the results should be saved to a text file (where the file name is input from the user)  (MORE ===>)\
\ls2\ilvl2
\f3 \'a2\'c0
\f4 	
\f0 write the graph to a text file (where the file name is input from the user) displaying each vertex and its adjacency list\
\pard\pardeftab720\ri0\sa120\partightenfactor0
\cf0 GRAPH Problems to choose:\
\pard\pardeftab720\li720\fi-360\ri0\sa120\partightenfactor0
\ls3\ilvl2\cf0 1.	Map coloring: represent adjacent geographic areas using a graph, and determine if you could color a map using a particular number of colors, OR find the minimum number of colors needed\
2.	Max flow: The 
\i\b maximum flow problem
\i0\b0  seeks to produce the largest flow of fluid, electrons, signal --whatever -- between two points in a network (aka 
\i\b graph
\i0\b0 ).\'a0 The starting assumptions are that only 
\i some
\i0  vertices on the graph have connections (edges) between them, and each edge has a maximum possible flow value (the "capacity" of that edge).\'a0 Also, we have to specify a starting and ending vertex for the flow, the 
\i\b source
\i0\b0  and 
\i\b sink
\i0\b0 .\'a0 So as not to use terminology that clashes with our 
\i\b source/destination
\i0\b0  terminology of edges, we will call the special vertices 
\b start
\b0  and 
\b end
\b0 .\
3.	Euler path OR circuit: An 
\b Euler path
\b0  is a 
\b path
\b0  that uses every edge of a graph exactly once. An 
\b Euler circuit
\b0  is a 
\b circuit
\b0  that uses every edge of a graph exactly once, where the edges must be connected. 
\f5 \uc0\u9654 
\f0  An 
\b Euler path
\b0  starts and ends at different vertices. 
\f5 \uc0\u9654 
\f0  An 
\b Euler circuit
\b0  starts and ends at the same vertex.\
4.	Dijkstra's algorithm (shortest path) (discussed in Lesson 11), BUT choose a particular application: finding shortest path for what? describe your application (what do the vertices and edges represent), for example, "six degrees of separation" problem, "least number of semesters" problem\
5.	Hamiltonian circuit: A 
\b Hamiltonian cycle
\b0 , also called a 
\b Hamiltonian circuit
\b0 , 
\b Hamilton cycle
\b0 , or 
\b Hamilton circuit
\b0 , is a graph 
\b cycle
\b0  (i.e., closed loop) through a graph that visits each node exactly once using existing edges.\
6.	Minimum Spanning Tree (see Lesson 11) for particular use (desribe), but NOT Kruskal's algorithm (example of that will be shown soon)}